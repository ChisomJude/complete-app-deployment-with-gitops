apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kube-prometheus-stack
  namespace: argocd
spec:
  project: monitoring
  destination:
    namespace: monitoring
    server: https://kubernetes.default.svc
  source:
    repoURL: https://prometheus-community.github.io/helm-charts
    chart: kube-prometheus-stack
    targetRevision: '>=61.0.0 <100.0.0'
    helm:
      values: |
        fullnameOverride: monitoring

        grafana:
          adminPassword: admin          # demo only; change later
          service:
            type: ClusterIP
            port: 80
          sidecar:
            dashboards:
              enabled: true
              label: grafana_dashboard
              labelValue: "1"
          additionalDataSources:
            - name: Loki
              type: loki
              url: http://loki.monitoring:3100
              access: proxy
              isDefault: false
            - name: Tempo
              type: tempo
              url: http://tempo.monitoring:3100
              access: proxy
              jsonData:
                tracesToLogs:
                  datasourceUid: Loki
                  tags: ["service.name","deployment.environment"]
                tracesToMetrics:
                  datasourceUid: Prometheus
                serviceMap:
                  datasourceUid: Prometheus

        prometheus:
          prometheusSpec:
            # Allow scraping ServiceMonitors across namespaces (simplifies setup)
            serviceMonitorSelectorNilUsesHelmValues: false
            podMonitorSelectorNilUsesHelmValues: false

        kubeControllerManager:
          enabled: false
        kubeScheduler:
          enabled: false
        # (optional) disable if not needed in kind/small clusters:
        # defaultRules:
        #   rules:
        #     kubeScheduler: false
        #     kubeControllerManager: false
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
